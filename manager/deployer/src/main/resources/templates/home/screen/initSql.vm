$control.setTemplate("home:navigation.vm")
#set($user = $rundata.request.session.getAttribute("managerUser"))
<script type="text/javascript" src="js/trcolor.js"></script>
<script type="text/javascript" src="js/jquery-1.4.2.min.js"></script> 
<script type="text/javascript" src="js/jquery.simplemodal-1.4.js"></script> 
<script language="javascript">
	changeNav("manual");
</script>

<!--页面主体-->
<div class="main">
   
  <div class="title"> 
    <h2>数据库初始化 SQL</h2>
  </div>
   <div class="crumbs">MYSQL</div>
   <br/><br/><br/>
   <h3>请DBA注意修改密码! retl 和 erosa 的密码</h3>
   	<pre>--供 otter 使用， otter 需要对 retl.* 的读写权限，以及对业务表的读写权限
--1. 创建database retl
CREATE DATABASE retl;

--2. 用户授权 给同步用户授权，erosa负责解析日志(只读权限), retl负责同步

CREATE USER 'retl'@'%' IDENTIFIED BY xxx; ----请修改密码
CREATE USER 'erosa'@'%' IDENTIFIED BY xxx; ----请修改密码

GRANT USAGE ON *.* TO 'retl'@'%';
GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'erosa'@'%';
GRANT SELECT, INSERT, UPDATE, DELETE, EXECUTE ON 'retl'.* TO 'retl'@'%';
GRANT SELECT, INSERT, UPDATE, DELETE ON *.* TO 'retl'@'%'; --业务表授权，这里可以限定只授权同步业务的表

--3. 创建系统表
USE retl;
DROP TABLE IF EXISTS retl.retl_buffer;
DROP TABLE IF EXISTS retl.retl_mark;
DROP TABLE IF EXISTS retl.xdual;
--DROP TABLE IF EXISTS retl.retl_client;

CREATE TABLE retl_buffer IF NOT EXISTS retl_buffer
(	
	ID BIGINT AUTO_INCREMENT,
	TABLE_ID INT(11) NOT NULL,
	FULL_NAME varchar(512),
	TYPE CHAR(1) NOT NULL,
	PK_DATA VARCHAR(256) NOT NULL,
	GMT_CREATE TIMESTAMP NOT NULL,
	GMT_MODIFIED TIMESTAMP NOT NULL,
	CONSTRAINT RETL_BUFFER_ID PRIMARY KEY (ID) 
)  ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE retl_mark IF NOT EXISTS retl_mark
(	
	ID BIGINT AUTO_INCREMENT,
	CHANNEL_INFO varchar(128),
	CHANNEL_ID INT(11),
	CONSTRAINT RETL_MARK_ID PRIMARY KEY (ID) 
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

CREATE TABLE xdual IF NOT EXISTS xdual (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  X timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS retl_client
( 
	id BIGINT NOT NULL AUTO_INCREMENT, 
	client_info varchar(64), 
	client_identifier varchar(64), 
	CONSTRAINT retl_client_id PRIMARY KEY (id)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

--- 插入初始化数据
INSERT INTO retl.xdual(id, x) VALUES (1,now()) ON DUPLICATE KEY UPDATE x = now();
   	</pre>
   </div>     
</div>
